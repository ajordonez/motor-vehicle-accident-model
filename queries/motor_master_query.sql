--This query is the master query for the motor vehicle accident project, this will clean, group, and join all 3 tables into one table to preform calculations on. 

--The following will be cleaning the data before joining them together
WITH cleaned_crashes AS (
  SELECT *
  FROM `ferrous-thought-409502.insurance.crashes`
  WHERE
    `CRASH DATE` BETWEEN '2015-01-01' AND '2024-12-01'
    AND BOROUGH IS NOT NULL
    AND `ZIP CODE` IS NOT NULL
    AND `ZIP CODE` > 10000
    AND COLLISION_ID IS NOT NULL
    AND `NUMBER OF PERSONS KILLED` IS NOT NULL
    AND `NUMBER OF PERSONS INJURED` IS NOT NULL

),

cleaned_vehicles AS (
    SELECT 
        COLLISION_ID,
        DRIVER_LICENSE_STATUS,
        UPPER(TRIM(VEHICLE_TYPE)) AS VEHICLE_TYPE,
        DRIVER_SEX,
        
        --This case query will sort the type of vehicles (ex: motorcycles, trucks, sedans, SUVs) together
        CASE 
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%SEDAN%' THEN 'Sedan'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%SPORT UTILITY%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%SUV%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%STATION WAGON%' THEN 'SUV'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%TAXI%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%CAB%' THEN 'Taxi'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%PICK%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%TRUCK%' THEN 'Pickup Truck'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%VAN%' THEN 'Van'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%AMBULANCE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%FIRE TRUCK%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%FDNY%' 
                OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%POLICE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%EMERGENCY%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%EMS%' THEN 'Emergency Vehicle'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%LIVERY%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%LIMO%' THEN 'Livery'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%BUS%' THEN 'Bus'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%MOTORCYCLE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%SCOOTER%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%MOPED%' 
                OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%E-SCOOTER%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%MOTORBIKE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%E-BIKE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%EBIKE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%DIRT BIKE%' THEN 'Motorcycle'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%BICYCLE%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%E-BIKE%' THEN 'Bicycle'
            WHEN UPPER(TRIM(VEHICLE_TYPE)) LIKE '%TRUCK%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%DUMP TRUCK%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%FLATBED%' 
                OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%TRACTOR TRAILER%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%MAIL TRUCK%' OR UPPER(TRIM(VEHICLE_TYPE)) LIKE '%GARBAGE%' THEN 'Truck'
            ELSE 'Other'

    END AS TYPE_OF_VEHICLE


    FROM 
        `ferrous-thought-409502.insurance.vehicles`
    WHERE 
        `CRASH_DATE` BETWEEN '2015-01-01' AND '2024-12-01'
        AND VEHICLE_TYPE IS NOT NULL
        AND DRIVER_SEX IS NOT NULL
        AND DRIVER_LICENSE_STATUS IS NOT NULL
        AND COLLISION_ID IS NOT NULL

),

cleaned_persons AS (
  SELECT *
  FROM `ferrous-thought-409502.insurance.persons`
  WHERE
    `CRASH_DATE` BETWEEN '2015-01-01' AND '2024-12-01'
    AND PERSON_TYPE IS NOT NULL
    AND PERSON_AGE IS NOT NULL 
    AND PERSON_AGE >0 
    AND PERSON_AGE <150
    AND PERSON_SEX IS NOT NULL
    AND COLLISION_ID IS NOT NULL
    AND PERSON_TYPE = "Occupant"
    AND EMOTIONAL_STATUS IS NOT NULL
    AND POSITION_IN_VEHICLE LIKE "%Driver%"
    AND PERSON_INJURY IS NOT NULL
)

--Here we will begin the query with the cleaned data
SELECT 
  c.`CRASH DATE`,
  c.`CRASH TIME`,
  c.BOROUGH,
  c.`ZIP CODE`,
  c.`NUMBER OF PERSONS KILLED`,
  c.`NUMBER OF PERSONS INJURED`,
  c.`CONTRIBUTING FACTOR VEHICLE 1`,
  v.DRIVER_LICENSE_STATUS,
  v.TYPE_OF_VEHICLE,
  p.PERSON_INJURY,
  p.PERSON_AGE,
  p.PERSON_SEX,
  COUNT(*) AS TOTAL_INCIDENTS

--Here we will join the 3 tables together with COLLISION_ID, where we rename the tables as c for Crashes, p for Persons, and v for Vehicles
FROM 
  cleaned_crashes AS c
  INNER JOIN cleaned_vehicles AS v
    ON c.COLLISION_ID = v.COLLISION_ID
  INNER JOIN cleaned_persons AS p
    ON c.COLLISION_ID = p.COLLISION_ID


GROUP BY 
  c.`CRASH DATE`,
  c.`CRASH TIME`,
  c.BOROUGH,
  c.`ZIP CODE`,
  c.`NUMBER OF PERSONS KILLED`,
  c.`NUMBER OF PERSONS INJURED`,
  c.`CONTRIBUTING FACTOR VEHICLE 1`,
  v.DRIVER_LICENSE_STATUS,
  v.TYPE_OF_VEHICLE,
  p.PERSON_INJURY,
  p.PERSON_AGE,
  p.PERSON_SEX

